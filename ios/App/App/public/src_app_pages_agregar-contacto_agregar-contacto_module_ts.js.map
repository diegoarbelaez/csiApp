{"version":3,"file":"src_app_pages_agregar-contacto_agregar-contacto_module_ts.js","mappings":"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","sources":["./src/app/pages/agregar-contacto/agregar-contacto-routing.module.ts","./src/app/pages/agregar-contacto/agregar-contacto.module.ts","./src/app/pages/agregar-contacto/agregar-contacto.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AgregarContactoPage } from './agregar-contacto.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AgregarContactoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AgregarContactoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AgregarContactoPageRoutingModule } from './agregar-contacto-routing.module';\n\nimport { AgregarContactoPage } from './agregar-contacto.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AgregarContactoPageRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [AgregarContactoPage]\n})\nexport class AgregarContactoPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { UsuarioService } from 'src/app/services/usuario.service';\nimport { HerramientasUIService } from '../../services/herramientas-ui.service';\nimport { CrudContactosService } from 'src/app/services/crud-contactos.service';\n\n@Component({\n  selector: 'app-agregar-contacto',\n  templateUrl: './agregar-contacto.page.html',\n  styleUrls: ['./agregar-contacto.page.scss'],\n})\nexport class AgregarContactoPage implements OnInit {\n\n  validador: FormGroup;\n\n  id_usuario;\n\n  datos = {\n    nombreContacto : 'Angélica Ceballos',\n    telefonoContacto : '3174337569',\n    descripcionContacto: 'Mi Amor',\n  }\n\n\n  mensajesValidacion = {\n    nombreContacto: [\n      { type: \"required\", message: \"Por favor ingrese el Nombre del Contacto\" },\n      { type: \"pattern\", message: \"Este correo no es válido\" }\n    ],\n    telefonoContacto: [\n      { type: \"required\", message: \"Por favor ingrese el teléfono del Contacto\" },\n      { type: \"pattern\", message: \"Este teléfono no es válido\" }\n    ],\n    descripcionContacto: [\n      { type: \"required\", message: \"Por favor ingrese la descripción\" },\n      { type: \"minlength\", message: \"Descripción es demasiado corta\" }\n\n    ]\n  }\n\n  constructor(public formbuider: FormBuilder, public crudContactos:CrudContactosService, public navCtrl:NavController, public herramientasUI:HerramientasUIService) { }\n\n  async crearContacto(datos) {\n    // console.log(\"Estoy logeado\");\n    // console.log(credenciales);\n    // console.log(\"Correo:\" + credenciales.correo);\n    // console.log(\"Password:\" + credenciales.password);\n\n    //Llama el Servicio y envía el Usuario y Password\n    await this.cargarIdUsuario();\n    const valido = await this.crudContactos.crearContacto(datos.nombreContacto,datos.telefonoContacto,datos.descripcionContacto, this.id_usuario);\n\n    if(valido){\n      //Pagina que se muestra cuando el login es OK\n      this.navCtrl.navigateRoot('/submenu2', {animated:true});\n    }\n    else {\n      //Lo que hace si el usuario no es correcto\n      console.log(\"no debe dejarlo logear\");\n      this.herramientasUI.mostrarAlerta(\"No encontrado\",\"Asegurate de haber escrito bien tus credenciales\");\n    }\n\n\n\n\n  }\n  ngOnInit() {\n\n    this.validador = this.formbuider.group({\n      nombreContacto: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(5)\n      ])),\n      telefonoContacto: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(5)\n      ])),\n      descripcionContacto: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(5)\n      ]))\n\n    })\n\n\n\n  }\n\n  async cargarIdUsuario(){\n    this.id_usuario = await this.crudContactos.cargarIdUsuario2(); \n  }\n}\n"],"names":["Component","FormBuilder","Validators","FormControl","NavController","HerramientasUIService","CrudContactosService","AgregarContactoPage","constructor","formbuider","crudContactos","navCtrl","herramientasUI","nombreContacto","telefonoContacto","descripcionContacto","type","message","crearContacto","datos","cargarIdUsuario","valido","id_usuario","navigateRoot","animated","console","log","mostrarAlerta","ngOnInit","validador","group","compose","required","minLength","cargarIdUsuario2","selector","template"],"sourceRoot":"webpack:///"}