{"version":3,"file":"src_app_pages_signup_signup_module_ts.js","mappings":"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","sources":["./src/app/pages/signup/signup-routing.module.ts","./src/app/pages/signup/signup.module.ts","./src/app/pages/signup/signup.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupPageRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { UsuarioService } from 'src/app/services/usuario.service';\nimport { HerramientasUIService } from '../../services/herramientas-ui.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n\n  validador: FormGroup;\n\n  //esto es para no tener que ingresar usuario y contraseña mientras estemos en pruebas\n  //creamos un objeto para guardar los valores default y luego con ngModel los dejamos como default\n  datosRegistro = {\n    correo : '',\n    cedula : '',\n    nombres: '',\n    apellidos : '',\n    direccion: '',\n    telefono: '',\n    password: '',\n    password2: ''\n  }\n\n  /*\n\n    datosRegistro = {\n    correo : \"diegoarbelaez.co@gmail.com\",\n    cedula : '94287419',\n    nombres: 'Diego Fernando',\n    apellidos : 'Arbeláez Montoya',\n    direccion: 'Cra 46 # 48 - 65',\n    telefono: '3218001896',\n    password: 'Kuzavy46',\n    password2: 'Kuzavy56'\n  }\n\n  */\n\n  mensajesValidacion = {\n    correo: [\n      { type: \"required\", message: \"Por favor ingrese su correo\" },\n      { type: \"pattern\", message: \"Este correo no es válido\" }\n    ],\n    cedula: [\n      { type: \"required\", message: \"Por favor ingrese su correo\" },\n      { type: \"minlength\", message: \"Esta cédula no es válida\" }\n    ],\n    nombres: [\n      { type: \"required\", message: \"Por favor ingrese su nombre\" },\n      { type: \"minlength\", message: \"Este nombre no es válido\" }\n    ],\n    apellidos: [\n      { type: \"required\", message: \"Por favor ingrese su apellido\" },\n      { type: \"minlength\", message: \"Este apellido no es válido\" }\n    ],\n    direccion: [\n      { type: \"required\", message: \"Por favor ingrese su dirección\" },\n      { type: \"minlength\", message: \"Esta dirección no es válida\" }\n    ],\n    telefono: [\n      { type: \"required\", message: \"Por favor ingrese su teléfono\" },\n      { type: \"minlength\", message: \"Este teléfono no es válido\" }\n    ],\n    password: [\n      { type: \"required\", message: \"Por favor ingrese su contraseña\" },\n      { type: \"minlength\", message: \"Este correo no es válido\" }\n    ],\n    password2: [\n      { type: \"required\", message: \"Por ingrese la misma contraseña\" },\n      { type: \"minlength\", message: \"La contraseña es demasiado corta\" }\n\n    ]\n  }\n\n  constructor(public formbuider: FormBuilder, public servicios:UsuarioService, public navCtrl:NavController, public herramientasUI:HerramientasUIService) { }\n\n  async registrar(datosRegistro) {\n    console.log(\"Estoy logeado\");\n    console.log(datosRegistro);\n    console.log(\"Correo:\" + datosRegistro.correo);\n    console.log(\"Password:\" + datosRegistro.password);\n\n    //Llama el Servicio y envía el Usuario y Password\n    const valido = await this.servicios.registrar(datosRegistro.correo,datosRegistro.cedula,datosRegistro.nombres,datosRegistro.apellidos,datosRegistro.direccion,datosRegistro.telefono,datosRegistro.password,datosRegistro.password2);\n\n    if(valido){\n      //Pagina que se muestra cuando el login es OK\n      //Aqui falta guardar el Token en la BD y el ID del usuario, para que pueda ir al botón de pánico\n      //Es decir hacer la misma rutina de un login\n\n\n\n      this.navCtrl.navigateRoot('/informacion', {animated:true});\n    }\n    else {\n      //Lo que hace si el usuario no es correcto\n      console.log(\"Usuario Ya registrado\");\n      this.herramientasUI.mostrarAlerta(\"Ya registrado\",\"Ya existe un usuario con ese número de cédula registrado.\");\n    }\n\n\n\n\n  }\n  ngOnInit() {\n\n    this.validador = this.formbuider.group({\n      correo: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      cedula: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(6)\n      ])),\n      nombres: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(5)\n      ])),\n      apellidos: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(5)\n      ])),\n      direccion: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(5)\n      ])),\n      telefono: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(5)\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(5)\n      ])),\n      password2: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(5)\n      ]))\n    })\n\n\n\n  }\n\n\n}\n"],"names":["Component","FormBuilder","Validators","FormControl","NavController","UsuarioService","HerramientasUIService","SignupPage","constructor","formbuider","servicios","navCtrl","herramientasUI","correo","cedula","nombres","apellidos","direccion","telefono","password","password2","type","message","registrar","datosRegistro","console","log","valido","navigateRoot","animated","mostrarAlerta","ngOnInit","validador","group","compose","required","pattern","minLength","selector","template"],"sourceRoot":"webpack:///"}